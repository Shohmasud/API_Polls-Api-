# Generated by Django 3.2.4 on 2021-06-29 20:15

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Ответы')),
            ],
            options={
                'verbose_name': '[Статичные данные,заполняет админ]-Ответы',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Id_forDataTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TimeNow_Id', models.BigIntegerField(unique=True, verbose_name='ID пользователя для начало даты и времени опроса')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-ID пользователя для даты и времени опроса пользователя',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_pols', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Заголовок опроса')),
                ('text_entry', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Описание входа')),
                ('text_example_id', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Описание id')),
                ('text_id', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Пример состовление Api ')),
                ('text_button', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Кнопка входа')),
            ],
            options={
                'verbose_name': '[Динамические временные данные,заполняет админ]-описание входа в приложение через внутренний api(1 страница приложения)',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_questions', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Вопросы')),
                ('name_category_questions', models.ManyToManyField(to='interview_api.answer')),
            ],
            options={
                'verbose_name': '[Статичные данные данные,заполняет админ]-Вопросы',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='sitepolls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_polls', models.CharField(db_index=True, max_length=1000, unique=True, verbose_name='Тема опроса')),
                ('text_head_handling', models.CharField(db_index=True, max_length=1000, unique=True, verbose_name='Заголовок обращения')),
                ('text_handling', models.CharField(db_index=True, max_length=1000, unique=True, verbose_name='Обращения')),
                ('text_for_whom', models.CharField(db_index=True, max_length=1000, unique=True, verbose_name='Для кого')),
            ],
            options={
                'verbose_name': '[Динамические временные данные,заполняет админ]-описание заголовок и названия приложения (1 страница приложения)',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='user_answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer_user', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Ответы типа радио кнопка')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-Ответы пользователя относящиеся к вопросу типа выборки Radiobutton',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='user_answerCheckboxButton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('textAnswer_userCheckbutton', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Ответы  типа чекбокс кнопки')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-Ответы пользователя относящиеся к типу выборки CheckboxButton',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='User_forQuestionsCheckbox_Button',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkbox_question', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Вопросы относящиеся к ответам кнопки Чекбокс от пользователя')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-Вопросы ответов пользователя относящиеся к типу выборки Checkboxbutton ',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='User_forQuestionsRadio_Button',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('radio_question', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Вопросы относящиеся к ответам кнопки Радио от пользователя')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-Вопросы ответов пользователя относящиеся к типу выборки Radio_Button',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='user_id',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_number', models.BigIntegerField(unique=True, verbose_name='Хранения числогвого ID пользователя')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-Id пользователя',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='userIdForCheckboxbutton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_numberCheckbox', models.BigIntegerField(unique=True, verbose_name='Хранения числогвого ID для Чекбокс кнопки')),
                ('numberAnswer_relForCheckBut', models.ManyToManyField(to='interview_api.user_answerCheckboxButton')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-ID пользователя относящиеся к типу выборки Checkboxbutton',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='user_idForRadiobutton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_numberRadio', models.BigIntegerField(unique=True, verbose_name='Хранения числогвого ID для радио кнопки')),
                ('numberAnswer_relForRadioBut', models.ManyToManyField(to='interview_api.user_answer')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-ID пользователя относящиеся к типу выборки Radiobutton',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='User_Id_forQuestionsRadio_Button',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_QuestionsRadio', models.BigIntegerField(unique=True, verbose_name='Хранения числогвого ID для вопросов от ответов Радио кнопки')),
                ('relet_radio', models.ManyToManyField(to='interview_api.User_forQuestionsRadio_Button')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-ID пользователя относящиеся к типу выборки Radiobutton',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='User_Id_forQuestionsCheckbox_Button',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_QuestionsCheckbox', models.BigIntegerField(unique=True, verbose_name='Хранения числогвого ID для вопросов от ответов Чекбокс кнопки')),
                ('relet_checkbox', models.ManyToManyField(to='interview_api.User_forQuestionsCheckbox_Button')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-ID пользователя относящиеся к вопросу типа выборки Checkboxbutton ',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ThemeForall_ObjectId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('textnameAll_themeForId', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Название опроса для Id ползователя')),
                ('nameTheme_questions_relId', models.ManyToManyField(to='interview_api.user_id')),
            ],
            options={
                'verbose_name': '[Динамические временные данные,заполняет админ]-динамическое название опроса для Id ползователя,для логики работы приложения',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ThemeForall_ObjectAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ThemeForAnswers', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Название опроса для всех ответов ')),
                ('nameTheme_questions_relAnwers', models.ManyToManyField(to='interview_api.answer')),
            ],
            options={
                'verbose_name': '[Статичные данные,заполняет админ]-список всех ответов относящиеся к теме опроса',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Theme_name_ForId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_nameATheme', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Название опроса относящийся к ID-пользователя')),
                ('nameTheme_id', models.ManyToManyField(to='interview_api.user_id')),
            ],
            options={
                'verbose_name': '[Статичные данные,заполняет админ]-список названии тем опроса относящиеся к ID пользователя',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Theme_all_ObjectPolls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_nameAll_theme', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Название опроса относящийся к определенным вопросы')),
                ('nameTheme_questions', models.ManyToManyField(to='interview_api.questions')),
            ],
            options={
                'verbose_name': '[Статичные данные,заполняет админ]-список всех вопросов относящиеся к теме опроса',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Datatime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TimeNow', models.DateTimeField(blank=True)),
                ('TimeNow_rel', models.ManyToManyField(to='interview_api.Id_forDataTime')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-Дата и время старта опроса пользователя(Id)',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DataEnd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TimeEnd', models.DateTimeField(blank=True)),
                ('TimeEnd_rel', models.ManyToManyField(to='interview_api.Id_forDataTime')),
            ],
            options={
                'verbose_name': '[Автозаполнение]-Дата окочание опроса пользователя(Id)',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='checkbox_button',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkbox_button', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Чекбокс кнопка')),
                ('name_category_button_checkbox', models.ManyToManyField(to='interview_api.answer')),
            ],
            options={
                'verbose_name': '[Динамические временные данные,заполняет админ]-выборка ответов типа CheckboxButton отображающиеся в приложении, вопрос сгенерируется автоматичеки',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='category_button',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('radio_button', models.CharField(db_index=True, max_length=400, unique=True, verbose_name='Радио кнопка')),
                ('name_category_button_radio', models.ManyToManyField(to='interview_api.answer')),
            ],
            options={
                'verbose_name': '[Динамические временные данные,заполняет админ]-выборка ответов типа Radio отображающиеся в приложении, вопрос сгенерируется автоматичеки',
                'ordering': ['id'],
            },
        ),
    ]
